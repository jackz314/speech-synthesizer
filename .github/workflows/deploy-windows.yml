# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Deploy Windows Release

on:
  push:
    paths-ignore:
      - '**/*.txt'
      - '**/*.md'
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  deploy:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller flake8 tornado
        pip install -r requirements.txt
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Cache Models
      uses: actions/cache@v2
      id: cache-models
      with:
        path: synthesizer_data/models
        key: models-cache
    - name: Download Models
      if: steps.cache-models.outputs.cache-hit != 'true'
      run: |
        python ./simple_downloader.py
    - name: Build release
      run: |
        pyinstaller .\ui.spec --noconfirm
    - name: Install 7zip
      run: |
        $Installer7Zip = $env:TEMP + "\7z1900-x64.msi";
        Invoke-WebRequest "https://www.7-zip.org/a/7z1900-x64.msi" -OutFile $Installer7Zip; 
        msiexec /i $Installer7Zip /qb; 
        Remove-Item $Installer7Zip;
        $env:Path += ";$env:ProgramFiles\7-zip"
    - name: Package release
      run: |
        7z a -tzip -v1800m -r windows-ui.zip ./dist/ui/
        ls
    - name: Get commit sha
      id: get-sha
      run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: CI-${{ steps.get-sha.outputs.sha_short }}
        release_name: CI Release CI-${{ steps.get-sha.outputs.sha_short }}
        draft: false
        prerelease: false
    - name: Upload Release Asset (Part 1)
      id: upload-release-asset-1 
      uses: actions/upload-release-asset@v1.0.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./windows-ui.zip.001
        asset_name: windows-ui.zip.001
        asset_content_type: application/zip
    - name: Check for release part 2
      id: check_files
      uses: andstor/file-existence-action@v1
      with:
        files: "./windows-ui.zip.002"  
    - name: Upload Release Asset (Part 2)
      if: steps.check_files.outputs.files_exists == 'true'
      id: upload-release-asset-2 
      uses: actions/upload-release-asset@v1.0.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./windows-ui.zip.002
        asset_name: windows-ui.zip.002
        asset_content_type: application/zip
#     - name: Test with pytest
#       run: |
#         pytest
